import React from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { ArrowLeft, Download, Bug, ExternalLink, Calendar, Clock } from "lucide-react";
import { useNavigate } from "react-router-dom";
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line } from "recharts";

const VulnerabilityReport = () => {
  const navigate = useNavigate();

  const vulnerabilitiesOverview = {
    total: 143,
    critical: 8,
    high: 23,
    medium: 45,
    low: 67,
    newThisMonth: 12,
    fixedThisMonth: 18
  };

  const vulnerabilitiesByGravity = [
    { severity: "Critique", count: 8, avgFixTime: 2.5, color: "#EF4444" },
    { severity: "√âlev√©e", count: 23, avgFixTime: 5.2, color: "#F59E0B" },
    { severity: "Moyenne", count: 45, avgFixTime: 12.8, color: "#3B82F6" },
    { severity: "Faible", count: 67, avgFixTime: 25.3, color: "#10B981" }
  ];

  const cveMapping = [
    {
      cve: "CVE-2025-0123",
      description: "Buffer overflow dans Apache HTTP Server",
      cvssScore: 9.8,
      severity: "Critique",
      affectedAssets: ["srv-web-01", "srv-web-02", "srv-web-03"],
      cpe: "cpe:2.3:a:apache:http_server:2.4.41",
      status: "En cours",
      detectedDate: "2025-01-10",
      source: "NIST NVD"
    },
    {
      cve: "CVE-2025-0098", 
      description: "Privilege escalation dans Windows Server",
      cvssScore: 7.8,
      severity: "√âlev√©e",
      affectedAssets: ["srv-ad-01", "srv-file-01"],
      cpe: "cpe:2.3:o:microsoft:windows_server_2019",
      status: "Corrig√©e",
      detectedDate: "2025-01-08",
      source: "Microsoft Security"
    },
    {
      cve: "CVE-2025-0076",
      description: "SQL injection dans application CRM",
      cvssScore: 6.5,
      severity: "Moyenne",
      affectedAssets: ["app-crm-01"],
      cpe: "cpe:2.3:a:company:crm_application:3.2.1",
      status: "Non corrig√©e",
      detectedDate: "2025-01-05",
      source: "Scan interne"
    }
  ];

  const macertAlerts = [
    {
      id: "MACERT-2025-001",
      title: "Vuln√©rabilit√© critique dans Apache Struts",
      description: "Ex√©cution de code √† distance possible",
      affectedAssets: 3,
      publishDate: "2025-01-10",
      severity: "Critique"
    },
    {
      id: "MACERT-2025-002",
      title: "Faille dans Microsoft Exchange",
      description: "Acc√®s non autoris√© aux bo√Ætes mail",
      affectedAssets: 0,
      publishDate: "2025-01-08", 
      severity: "√âlev√©e"
    }
  ];

  const mostExposedAssets = [
    { asset: "srv-web-01", vulnerabilities: 12, riskScore: 8.5, lastScan: "2025-01-15" },
    { asset: "srv-web-02", vulnerabilities: 10, riskScore: 7.8, lastScan: "2025-01-15" },
    { asset: "app-crm-01", vulnerabilities: 8, riskScore: 7.2, lastScan: "2025-01-14" },
    { asset: "srv-db-01", vulnerabilities: 6, riskScore: 6.9, lastScan: "2025-01-13" }
  ];

  const fixingTrend = [
    { month: "Oct", nouvelles: 15, corrigees: 12 },
    { month: "Nov", nouvelles: 18, corrigees: 16 },
    { month: "Dec", nouvelles: 22, corrigees: 19 },
    { month: "Jan", nouvelles: 12, corrigees: 18 }
  ];

  const generateVulnerabilityPDF = () => {
    const reportDate = new Date().toLocaleDateString('fr-FR');
    
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <title>Rapport de Vuln√©rabilit√©s - ${reportDate}</title>
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 20px; }
          .header { text-align: center; border-bottom: 3px solid #F59E0B; padding-bottom: 20px; margin-bottom: 30px; }
          .header h1 { color: #1F2937; margin: 0; font-size: 28px; }
          .section { margin-bottom: 30px; }
          .section h2 { color: #1F2937; border-left: 4px solid #F59E0B; padding-left: 15px; }
          .metric-grid { display: grid; grid-template-columns: repeat(4, 1fr); gap: 15px; margin-bottom: 20px; }
          .metric-card { border: 1px solid #E5E7EB; border-radius: 8px; padding: 15px; background: #F9FAFB; text-align: center; }
          .metric-value { font-size: 20px; font-weight: bold; margin-bottom: 5px; }
          .critical { color: #EF4444; }
          .high { color: #F59E0B; }
          .medium { color: #3B82F6; }
          .low { color: #10B981; }
          table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }
          th, td { border: 1px solid #E5E7EB; padding: 8px; text-align: left; font-size: 12px; }
          th { background-color: #F3F4F6; font-weight: 600; }
          .cve-link { color: #3B82F6; text-decoration: none; }
          .status-fixed { color: #10B981; font-weight: bold; }
          .status-progress { color: #F59E0B; font-weight: bold; }
          .status-open { color: #EF4444; font-weight: bold; }
        </style>
      </head>
      <body>
        <div class="header">
          <h1>üêõ Rapport de Vuln√©rabilit√©s</h1>
          <p>Suivi des vuln√©rabilit√©s connues dans le SI - ${reportDate}</p>
        </div>

        <div class="section">
          <h2>üìä Vue d'ensemble des Vuln√©rabilit√©s</h2>
          <div class="metric-grid">
            <div class="metric-card">
              <div class="metric-value">${vulnerabilitiesOverview.total}</div>
              <div>Total actives</div>
            </div>
            <div class="metric-card">
              <div class="metric-value critical">${vulnerabilitiesOverview.critical}</div>
              <div>Critiques</div>
            </div>
            <div class="metric-card">
              <div class="metric-value">${vulnerabilitiesOverview.newThisMonth}</div>
              <div>Nouvelles ce mois</div>
            </div>
            <div class="metric-card">
              <div class="metric-value low">${vulnerabilitiesOverview.fixedThisMonth}</div>
              <div>Corrig√©es ce mois</div>
            </div>
          </div>
        </div>

        <div class="section">
          <h2>‚ö†Ô∏è R√©partition par Gravit√©</h2>
          <table>
            <thead>
              <tr><th>S√©v√©rit√©</th><th>Nombre</th><th>Temps moyen de correction</th><th>Priorit√©</th></tr>
            </thead>
            <tbody>
              ${vulnerabilitiesByGravity.map(vuln => `
                <tr>
                  <td class="${vuln.severity.toLowerCase().replace('√©', '')}">${vuln.severity}</td>
                  <td class="${vuln.severity.toLowerCase().replace('√©', '')}">${vuln.count}</td>
                  <td>${vuln.avgFixTime} jours</td>
                  <td>${vuln.severity === 'Critique' ? 'Imm√©diate' : vuln.severity === '√âlev√©e' ? '< 7 jours' : '< 30 jours'}</td>
                </tr>
              `).join('')}
            </tbody>
          </table>
        </div>

        <div class="section">
          <h2>üéØ Mapping CVE ‚Üî Actifs</h2>
          <table>
            <thead>
              <tr><th>CVE</th><th>Description</th><th>CVSS</th><th>Actifs affect√©s</th><th>CPE</th><th>Statut</th><th>Source</th></tr>
            </thead>
            <tbody>
              ${cveMapping.map(cve => `
                <tr>
                  <td><a href="#" class="cve-link">${cve.cve}</a></td>
                  <td>${cve.description}</td>
                  <td class="${cve.severity === 'Critique' ? 'critical' : cve.severity === '√âlev√©e' ? 'high' : 'medium'}">${cve.cvssScore}</td>
                  <td>${cve.affectedAssets.join(', ')}</td>
                  <td style="font-size: 10px;">${cve.cpe}</td>
                  <td class="status-${cve.status === 'Corrig√©e' ? 'fixed' : cve.status === 'En cours' ? 'progress' : 'open'}">${cve.status}</td>
                  <td>${cve.source}</td>
                </tr>
              `).join('')}
            </tbody>
          </table>
        </div>

        <div class="section">
          <h2>üì¢ Nouveaux Bulletins MACERT/CERT-FR</h2>
          <table>
            <thead>
              <tr><th>ID</th><th>Titre</th><th>Description</th><th>Actifs impact√©s</th><th>Date publication</th><th>S√©v√©rit√©</th></tr>
            </thead>
            <tbody>
              ${macertAlerts.map(alert => `
                <tr>
                  <td><strong>${alert.id}</strong></td>
                  <td>${alert.title}</td>
                  <td>${alert.description}</td>
                  <td>${alert.affectedAssets}</td>
                  <td>${alert.publishDate}</td>
                  <td class="${alert.severity === 'Critique' ? 'critical' : 'high'}">${alert.severity}</td>
                </tr>
              `).join('')}
            </tbody>
          </table>
        </div>

        <div class="section">
          <h2>üéØ Actifs les Plus Expos√©s</h2>
          <table>
            <thead>
              <tr><th>Actif</th><th>Vuln√©rabilit√©s</th><th>Score de risque</th><th>Dernier scan</th></tr>
            </thead>
            <tbody>
              ${mostExposedAssets.map(asset => `
                <tr>
                  <td><strong>${asset.asset}</strong></td>
                  <td class="${asset.vulnerabilities > 10 ? 'critical' : asset.vulnerabilities > 5 ? 'high' : 'medium'}">${asset.vulnerabilities}</td>
                  <td class="${asset.riskScore > 8 ? 'critical' : asset.riskScore > 6 ? 'high' : 'medium'}">${asset.riskScore}/10</td>
                  <td>${asset.lastScan}</td>
                </tr>
              `).join('')}
            </tbody>
          </table>
        </div>
      </body>
      </html>
    `;

    const blob = new Blob([htmlContent], { type: 'text/html' });
    const url = window.URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `rapport-vulnerabilites-${new Date().toISOString().split('T')[0]}.html`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    window.URL.revokeObjectURL(url);

    setTimeout(() => {
      const printWindow = window.open('', '_blank');
      if (printWindow) {
        printWindow.document.write(htmlContent);
        printWindow.document.close();
        setTimeout(() => { printWindow.print(); printWindow.close(); }, 100);
      }
    }, 100);
  };

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-6xl mx-auto space-y-6">
        {/* En-t√™te */}
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-4">
            <Button variant="outline" onClick={() => navigate(-1)}>
              <ArrowLeft className="h-4 w-4 mr-2" />
              Retour
            </Button>
            <div>
              <h1 className="text-3xl font-bold text-gray-900 flex items-center">
                <Bug className="h-8 w-8 mr-3 text-orange-500" />
                Rapport de Vuln√©rabilit√©s
              </h1>
              <p className="text-gray-600">Suivi des vuln√©rabilit√©s connues dans le SI</p>
            </div>
          </div>
          <Button onClick={generateVulnerabilityPDF}>
            <Download className="h-4 w-4 mr-2" />
            Exporter PDF
          </Button>
        </div>

        {/* Vue d'ensemble */}
        <Card>
          <CardHeader>
            <CardTitle>Vue d'ensemble des Vuln√©rabilit√©s</CardTitle>
            <CardDescription>Nombre total de vuln√©rabilit√©s actives et tendances</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
              <div className="text-center p-4 border rounded-lg">
                <div className="text-3xl font-bold text-gray-800 mb-1">{vulnerabilitiesOverview.total}</div>
                <div className="text-sm text-gray-600">Total actives</div>
              </div>
              <div className="text-center p-4 border rounded-lg bg-red-50">
                <div className="text-3xl font-bold text-red-600 mb-1">{vulnerabilitiesOverview.critical}</div>
                <div className="text-sm text-gray-600">Critiques</div>
              </div>
              <div className="text-center p-4 border rounded-lg bg-blue-50">
                <div className="text-3xl font-bold text-blue-600 mb-1">+{vulnerabilitiesOverview.newThisMonth}</div>
                <div className="text-sm text-gray-600">Nouvelles ce mois</div>
              </div>
              <div className="text-center p-4 border rounded-lg bg-green-50">
                <div className="text-3xl font-bold text-green-600 mb-1">{vulnerabilitiesOverview.fixedThisMonth}</div>
                <div className="text-sm text-gray-600">Corrig√©es ce mois</div>
              </div>
            </div>

            <ResponsiveContainer width="100%" height={300}>
              <LineChart data={fixingTrend}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="month" />
                <YAxis />
                <Tooltip />
                <Legend />
                <Line type="monotone" dataKey="nouvelles" stroke="#EF4444" name="Nouvelles vuln√©rabilit√©s" />
                <Line type="monotone" dataKey="corrigees" stroke="#10B981" name="Vuln√©rabilit√©s corrig√©es" />
              </LineChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>

        {/* R√©partition par gravit√© */}
        <Card>
          <CardHeader>
            <CardTitle>R√©partition par Gravit√©</CardTitle>
            <CardDescription>Distribution et d√©lais moyens de correction</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <div className="space-y-4">
                {vulnerabilitiesByGravity.map((vuln, index) => (
                  <div key={index} className="flex items-center justify-between p-4 border rounded-lg">
                    <div className="flex items-center space-x-3">
                      <div className="w-4 h-4 rounded" style={{backgroundColor: vuln.color}}></div>
                      <span className="font-medium">{vuln.severity}</span>
                    </div>
                    <div className="text-right">
                      <div className="text-2xl font-bold" style={{color: vuln.color}}>{vuln.count}</div>
                      <div className="text-sm text-gray-500">{vuln.avgFixTime} jours avg</div>
                    </div>
                  </div>
                ))}
              </div>
              <ResponsiveContainer width="100%" height={250}>
                <BarChart data={vulnerabilitiesByGravity}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="severity" />
                  <YAxis />
                  <Tooltip />
                  <Bar dataKey="count" fill="#F59E0B" />
                </BarChart>
              </ResponsiveContainer>
            </div>
          </CardContent>
        </Card>

        {/* Mapping CVE */}
        <Card>
          <CardHeader>
            <CardTitle>Mapping CVE ‚Üî Actifs</CardTitle>
            <CardDescription>Corr√©lation entre vuln√©rabilit√©s CVE et actifs impact√©s</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="overflow-x-auto">
              <table className="w-full">
                <thead>
                  <tr className="border-b">
                    <th className="text-left p-3">CVE</th>
                    <th className="text-left p-3">Description</th>
                    <th className="text-left p-3">CVSS</th>
                    <th className="text-left p-3">Actifs affect√©s</th>
                    <th className="text-left p-3">CPE</th>
                    <th className="text-left p-3">Statut</th>
                    <th className="text-left p-3">D√©tect√© le</th>
                  </tr>
                </thead>
                <tbody>
                  {cveMapping.map((cve, index) => (
                    <tr key={index} className="border-b">
                      <td className="p-3">
                        <div className="flex items-center space-x-2">
                          <span className="font-mono font-bold text-blue-600">{cve.cve}</span>
                          <ExternalLink className="h-3 w-3 text-blue-500" />
                        </div>
                      </td>
                      <td className="p-3 max-w-xs">
                        <div className="truncate" title={cve.description}>
                          {cve.description}
                        </div>
                      </td>
                      <td className="p-3">
                        <Badge variant={
                          cve.cvssScore >= 9 ? "destructive" :
                          cve.cvssScore >= 7 ? "secondary" : "outline"
                        }>
                          {cve.cvssScore}
                        </Badge>
                      </td>
                      <td className="p-3">
                        <div className="space-y-1">
                          {cve.affectedAssets.map(asset => (
                            <Badge key={asset} variant="outline" className="text-xs">
                              {asset}
                            </Badge>
                          ))}
                        </div>
                      </td>
                      <td className="p-3 text-xs font-mono max-w-xs">
                        <div className="truncate" title={cve.cpe}>
                          {cve.cpe}
                        </div>
                      </td>
                      <td className="p-3">
                        <Badge variant={
                          cve.status === 'Corrig√©e' ? "default" :
                          cve.status === 'En cours' ? "secondary" : "destructive"
                        }>
                          {cve.status}
                        </Badge>
                      </td>
                      <td className="p-3 text-sm">{cve.detectedDate}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </CardContent>
        </Card>

        {/* Bulletins MACERT */}
        <Card>
          <CardHeader>
            <CardTitle>Nouveaux Bulletins MACERT / CERT-FR</CardTitle>
            <CardDescription>Alertes r√©centes impactant les actifs</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {macertAlerts.map((alert, index) => (
                <div key={index} className="border rounded-lg p-4">
                  <div className="flex items-center justify-between mb-2">
                    <div className="flex items-center space-x-3">
                      <span className="font-mono text-sm font-bold text-blue-600">{alert.id}</span>
                      <Badge variant={alert.severity === 'Critique' ? "destructive" : "secondary"}>
                        {alert.severity}
                      </Badge>
                    </div>
                    <div className="flex items-center space-x-2 text-sm text-gray-600">
                      <Calendar className="h-4 w-4" />
                      {alert.publishDate}
                    </div>
                  </div>
                  <h3 className="font-semibold mb-1">{alert.title}</h3>
                  <p className="text-gray-600 mb-2">{alert.description}</p>
                  <div className="flex justify-between items-center text-sm">
                    <span className="text-gray-600">Actifs impact√©s: {alert.affectedAssets}</span>
                    {alert.affectedAssets > 0 && (
                      <Badge variant="destructive">Action requise</Badge>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* Actifs les plus expos√©s */}
        <Card>
          <CardHeader>
            <CardTitle>Actifs les Plus Expos√©s / Critiques</CardTitle>
            <CardDescription>Classement par nombre de vuln√©rabilit√©s et score de risque</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="overflow-x-auto">
              <table className="w-full">
                <thead>
                  <tr className="border-b">
                    <th className="text-left p-3">Actif</th>
                    <th className="text-left p-3">Vuln√©rabilit√©s</th>
                    <th className="text-left p-3">Score de risque</th>
                    <th className="text-left p-3">Dernier scan</th>
                    <th className="text-left p-3">Action prioritaire</th>
                  </tr>
                </thead>
                <tbody>
                  {mostExposedAssets.map((asset, index) => (
                    <tr key={index} className="border-b">
                      <td className="p-3 font-mono font-semibold">{asset.asset}</td>
                      <td className="p-3">
                        <Badge variant={
                          asset.vulnerabilities > 10 ? "destructive" :
                          asset.vulnerabilities > 5 ? "secondary" : "outline"
                        }>
                          {asset.vulnerabilities}
                        </Badge>
                      </td>
                      <td className="p-3">
                        <div className="flex items-center space-x-2">
                          <span className={`font-bold ${
                            asset.riskScore > 8 ? 'text-red-600' :
                            asset.riskScore > 6 ? 'text-orange-600' : 'text-green-600'
                          }`}>
                            {asset.riskScore}/10
                          </span>
                        </div>
                      </td>
                      <td className="p-3 flex items-center space-x-1">
                        <Clock className="h-3 w-3 text-gray-500" />
                        <span className="text-sm">{asset.lastScan}</span>
                      </td>
                      <td className="p-3">
                        <Badge variant={asset.riskScore > 8 ? "destructive" : "secondary"}>
                          {asset.riskScore > 8 ? 'Critique' : 'Surveillance'}
                        </Badge>
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default VulnerabilityReport;